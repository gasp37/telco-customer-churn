[{"accuracy":0.8066766317887394,
"algorithm":"LogisticRegression",
"confusion_matrix":[
    {"Churn":1.0,"prediction":1.0,"count":279},
    {"Churn":0.0,"prediction":1.0,"count":132},
    {"Churn":1.0,"prediction":0.0,"count":256},
    {"Churn":0.0,"prediction":0.0,"count":1340}],
"f1_score":0.7979131854741442,
"params":"{Param(parent='LogisticRegression_de002cf59741', name='aggregationDepth', doc='suggested depth for treeAggregate (>= 2).'): 2, Param(parent='LogisticRegression_de002cf59741', name='elasticNetParam', doc='the ElasticNet mixing parameter, in range [0, 1]. For alpha = 0, the penalty is an L2 penalty. For alpha = 1, it is an L1 penalty.'): 0.0, Param(parent='LogisticRegression_de002cf59741', name='family', doc='The name of family which is a description of the label distribution to be used in the model. Supported options: auto, binomial, multinomial'): 'auto', Param(parent='LogisticRegression_de002cf59741', name='featuresCol', doc='features column name.'): 'features', Param(parent='LogisticRegression_de002cf59741', name='fitIntercept', doc='whether to fit an intercept term.'): True, Param(parent='LogisticRegression_de002cf59741', name='labelCol', doc='label column name.'): 'Churn', Param(parent='LogisticRegression_de002cf59741', name='maxBlockSizeInMB', doc='maximum memory in MB for stacking input data into blocks. Data is stacked within partitions. If more than remaining data size in a partition then it is adjusted to the data size. Default 0.0 represents choosing optimal value, depends on specific algorithm. Must be >= 0.'): 0.0, Param(parent='LogisticRegression_de002cf59741', name='maxIter', doc='max number of iterations (>= 0).'): 75, Param(parent='LogisticRegression_de002cf59741', name='predictionCol', doc='prediction column name.'): 'prediction', Param(parent='LogisticRegression_de002cf59741', name='probabilityCol', doc='Column name for predicted class conditional probabilities. Note: Not all models output well-calibrated probability estimates! These probabilities should be treated as confidences, not precise probabilities.'): 'probability', Param(parent='LogisticRegression_de002cf59741', name='rawPredictionCol', doc='raw prediction (a.k.a. confidence) column name.'): 'rawPrediction', Param(parent='LogisticRegression_de002cf59741', name='regParam', doc='regularization parameter (>= 0).'): 0.001, Param(parent='LogisticRegression_de002cf59741', name='standardization', doc='whether to standardize the training features before fitting the model.'): True, Param(parent='LogisticRegression_de002cf59741', name='threshold', doc='Threshold in binary classification prediction, in range [0, 1]. If threshold and thresholds are both set, they must match.e.g. if threshold is p, then thresholds must be equal to [1-p, p].'): 0.5, Param(parent='LogisticRegression_de002cf59741', name='tol', doc='the convergence tolerance for iterative algorithms (>= 0).'): 1e-06}",
"recall":0.5214953271028038},
{"accuracy":0.7593423019431988,
"algorithm":"LogisticRegression",
"confusion_matrix":[
    {"Churn":1.0,"prediction":1.0,"count":391},
    {"Churn":0.0,"prediction":1.0,"count":339},
    {"Churn":1.0,"prediction":0.0,"count":144},
    {"Churn":0.0,"prediction":0.0,"count":1133}],
"f1_score":0.7693555046836388,
"params":"{Param(parent='LogisticRegression_8971cd9ba4ce', name='aggregationDepth', doc='suggested depth for treeAggregate (>= 2).'): 2, Param(parent='LogisticRegression_8971cd9ba4ce', name='elasticNetParam', doc='the ElasticNet mixing parameter, in range [0, 1]. For alpha = 0, the penalty is an L2 penalty. For alpha = 1, it is an L1 penalty.'): 0.0, Param(parent='LogisticRegression_8971cd9ba4ce', name='family', doc='The name of family which is a description of the label distribution to be used in the model. Supported options: auto, binomial, multinomial'): 'auto', Param(parent='LogisticRegression_8971cd9ba4ce', name='featuresCol', doc='features column name.'): 'features', Param(parent='LogisticRegression_8971cd9ba4ce', name='fitIntercept', doc='whether to fit an intercept term.'): True, Param(parent='LogisticRegression_8971cd9ba4ce', name='labelCol', doc='label column name.'): 'Churn', Param(parent='LogisticRegression_8971cd9ba4ce', name='maxBlockSizeInMB', doc='maximum memory in MB for stacking input data into blocks. Data is stacked within partitions. If more than remaining data size in a partition then it is adjusted to the data size. Default 0.0 represents choosing optimal value, depends on specific algorithm. Must be >= 0.'): 0.0, Param(parent='LogisticRegression_8971cd9ba4ce', name='maxIter', doc='max number of iterations (>= 0).'): 75, Param(parent='LogisticRegression_8971cd9ba4ce', name='predictionCol', doc='prediction column name.'): 'prediction', Param(parent='LogisticRegression_8971cd9ba4ce', name='probabilityCol', doc='Column name for predicted class conditional probabilities. Note: Not all models output well-calibrated probability estimates! These probabilities should be treated as confidences, not precise probabilities.'): 'probability', Param(parent='LogisticRegression_8971cd9ba4ce', name='rawPredictionCol', doc='raw prediction (a.k.a. confidence) column name.'): 'rawPrediction', Param(parent='LogisticRegression_8971cd9ba4ce', name='regParam', doc='regularization parameter (>= 0).'): 0.001, Param(parent='LogisticRegression_8971cd9ba4ce', name='standardization', doc='whether to standardize the training features before fitting the model.'): True, Param(parent='LogisticRegression_8971cd9ba4ce', name='threshold', doc='Threshold in binary classification prediction, in range [0, 1]. If threshold and thresholds are both set, they must match.e.g. if threshold is p, then thresholds must be equal to [1-p, p].'): 0.5, Param(parent='LogisticRegression_8971cd9ba4ce', name='tol', doc='the convergence tolerance for iterative algorithms (>= 0).'): 1e-06}",
"recall":0.7308411214953271},
{"accuracy":0.7528649725959143,
"algorithm":"SVM",
"confusion_matrix":[
    {"Churn":1.0,"prediction":1.0,"count":412},
    {"Churn":0.0,"prediction":1.0,"count":373},
    {"Churn":1.0,"prediction":0.0,"count":123},
    {"Churn":0.0,"prediction":0.0,"count":1099}],
"f1_score":0.7648009923020659,
"params":"{Param(parent='LinearSVC_d30e69f36626', name='aggregationDepth', doc='suggested depth for treeAggregate (>= 2).'): 2, Param(parent='LinearSVC_d30e69f36626', name='featuresCol', doc='features column name.'): 'features', Param(parent='LinearSVC_d30e69f36626', name='fitIntercept', doc='whether to fit an intercept term.'): True, Param(parent='LinearSVC_d30e69f36626', name='labelCol', doc='label column name.'): 'Churn', Param(parent='LinearSVC_d30e69f36626', name='maxBlockSizeInMB', doc='maximum memory in MB for stacking input data into blocks. Data is stacked within partitions. If more than remaining data size in a partition then it is adjusted to the data size. Default 0.0 represents choosing optimal value, depends on specific algorithm. Must be >= 0.'): 0.0, Param(parent='LinearSVC_d30e69f36626', name='maxIter', doc='max number of iterations (>= 0).'): 250, Param(parent='LinearSVC_d30e69f36626', name='predictionCol', doc='prediction column name.'): 'prediction', Param(parent='LinearSVC_d30e69f36626', name='rawPredictionCol', doc='raw prediction (a.k.a. confidence) column name.'): 'rawPrediction', Param(parent='LinearSVC_d30e69f36626', name='regParam', doc='regularization parameter (>= 0).'): 0.001, Param(parent='LinearSVC_d30e69f36626', name='standardization', doc='whether to standardize the training features before fitting the model.'): True, Param(parent='LinearSVC_d30e69f36626', name='threshold', doc='The threshold in binary classification applied to the linear model prediction.  This threshold can be any real number, where Inf will make all predictions 0.0 and -Inf will make all predictions 1.0.'): 0.0, Param(parent='LinearSVC_d30e69f36626', name='tol', doc='the convergence tolerance for iterative algorithms (>= 0).'): 1e-06}",
"recall":0.7700934579439253},
{"accuracy":0.7618335824613851,
"algorithm":"RandomForest",
"confusion_matrix":[
    {"Churn":1.0,"prediction":1.0,"count":403},
    {"Churn":0.0,"prediction":1.0,"count":346},
    {"Churn":1.0,"prediction":0.0,"count":132},
    {"Churn":0.0,"prediction":0.0,"count":1126}],
"f1_score":0.7723460562025586,
"params":"{Param(parent='RandomForestClassifier_860f0bcacf7e', name='bootstrap', doc='Whether bootstrap samples are used when building trees.'): True, Param(parent='RandomForestClassifier_860f0bcacf7e', name='cacheNodeIds', doc='If false, the algorithm will pass trees to executors to match instances with nodes. If true, the algorithm will cache node IDs for each instance. Caching can speed up training of deeper trees. Users can set how often should the cache be checkpointed or disable it by setting checkpointInterval.'): False, Param(parent='RandomForestClassifier_860f0bcacf7e', name='checkpointInterval', doc='set checkpoint interval (>= 1) or disable checkpoint (-1). E.g. 10 means that the cache will get checkpointed every 10 iterations. Note: this setting will be ignored if the checkpoint directory is not set in the SparkContext.'): 10, Param(parent='RandomForestClassifier_860f0bcacf7e', name='featureSubsetStrategy', doc=\"The number of features to consider for splits at each tree node. Supported options: 'auto' (choose automatically for task: If numTrees == 1, set to 'all'. If numTrees > 1 (forest), set to 'sqrt' for classification and to 'onethird' for regression), 'all' (use all features), 'onethird' (use 1/3 of the features), 'sqrt' (use sqrt(number of features)), 'log2' (use log2(number of features)), 'n' (when n is in the range (0, 1.0], use n * number of features. When n is in the range (1, number of features), use n features). default = 'auto'\"): '2', Param(parent='RandomForestClassifier_860f0bcacf7e', name='featuresCol', doc='features column name.'): 'features', Param(parent='RandomForestClassifier_860f0bcacf7e', name='impurity', doc='Criterion used for information gain calculation (case-insensitive). Supported options: entropy, gini'): 'gini', Param(parent='RandomForestClassifier_860f0bcacf7e', name='labelCol', doc='label column name.'): 'Churn', Param(parent='RandomForestClassifier_860f0bcacf7e', name='leafCol', doc='Leaf indices column name. Predicted leaf index of each instance in each tree by preorder.'): '', Param(parent='RandomForestClassifier_860f0bcacf7e', name='maxBins', doc='Max number of bins for discretizing continuous features.  Must be >=2 and >= number of categories for any categorical feature.'): 32, Param(parent='RandomForestClassifier_860f0bcacf7e', name='maxDepth', doc='Maximum depth of the tree. (>= 0) E.g., depth 0 means 1 leaf node; depth 1 means 1 internal node + 2 leaf nodes.'): 5, Param(parent='RandomForestClassifier_860f0bcacf7e', name='maxMemoryInMB', doc='Maximum memory in MB allocated to histogram aggregation. If too small, then 1 node will be split per iteration, and its aggregates may exceed this size.'): 256, Param(parent='RandomForestClassifier_860f0bcacf7e', name='minInfoGain', doc='Minimum information gain for a split to be considered at a tree node.'): 0.0, Param(parent='RandomForestClassifier_860f0bcacf7e', name='minInstancesPerNode', doc='Minimum number of instances each child must have after split. If a split causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as invalid. Should be >= 1.'): 1, Param(parent='RandomForestClassifier_860f0bcacf7e', name='minWeightFractionPerNode', doc='Minimum fraction of the weighted sample count that each child must have after split. If a split causes the fraction of the total weight in the left or right child to be less than minWeightFractionPerNode, the split will be discarded as invalid. Should be in interval [0.0, 0.5).'): 0.0, Param(parent='RandomForestClassifier_860f0bcacf7e', name='numTrees', doc='Number of trees to train (>= 1).'): 100, Param(parent='RandomForestClassifier_860f0bcacf7e', name='predictionCol', doc='prediction column name.'): 'prediction', Param(parent='RandomForestClassifier_860f0bcacf7e', name='probabilityCol', doc='Column name for predicted class conditional probabilities. Note: Not all models output well-calibrated probability estimates! These probabilities should be treated as confidences, not precise probabilities.'): 'probability', Param(parent='RandomForestClassifier_860f0bcacf7e', name='rawPredictionCol', doc='raw prediction (a.k.a. confidence) column name.'): 'rawPrediction', Param(parent='RandomForestClassifier_860f0bcacf7e', name='seed', doc='random seed.'): -5387697053847413545, Param(parent='RandomForestClassifier_860f0bcacf7e', name='subsamplingRate', doc='Fraction of the training data used for learning each decision tree, in range (0, 1].'): 1.0}",
"recall":0.7532710280373832}]
